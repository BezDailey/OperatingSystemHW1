
words:     file format elf64-x86-64
words
architecture: i386:x86-64, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x00000000000010c0

Program Header:
    PHDR off    0x0000000000000040 vaddr 0x0000000000000040 paddr 0x0000000000000040 align 2**3
         filesz 0x0000000000000268 memsz 0x0000000000000268 flags r--
  INTERP off    0x00000000000002a8 vaddr 0x00000000000002a8 paddr 0x00000000000002a8 align 2**0
         filesz 0x000000000000001c memsz 0x000000000000001c flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**12
         filesz 0x0000000000000818 memsz 0x0000000000000818 flags r--
    LOAD off    0x0000000000001000 vaddr 0x0000000000001000 paddr 0x0000000000001000 align 2**12
         filesz 0x0000000000000655 memsz 0x0000000000000655 flags r-x
    LOAD off    0x0000000000002000 vaddr 0x0000000000002000 paddr 0x0000000000002000 align 2**12
         filesz 0x00000000000004d8 memsz 0x00000000000004d8 flags r--
    LOAD off    0x0000000000002d80 vaddr 0x0000000000003d80 paddr 0x0000000000003d80 align 2**12
         filesz 0x0000000000000320 memsz 0x0000000000000348 flags rw-
 DYNAMIC off    0x0000000000002d90 vaddr 0x0000000000003d90 paddr 0x0000000000003d90 align 2**3
         filesz 0x00000000000001f0 memsz 0x00000000000001f0 flags rw-
    NOTE off    0x00000000000002c4 vaddr 0x00000000000002c4 paddr 0x00000000000002c4 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
EH_FRAME off    0x00000000000021c8 vaddr 0x00000000000021c8 paddr 0x00000000000021c8 align 2**2
         filesz 0x000000000000009c memsz 0x000000000000009c flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000002d80 vaddr 0x0000000000003d80 paddr 0x0000000000003d80 align 2**0
         filesz 0x0000000000000280 memsz 0x0000000000000280 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x0000000000001000
  FINI                 0x0000000000001648
  INIT_ARRAY           0x0000000000003d80
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000003d88
  FINI_ARRAYSZ         0x0000000000000008
  GNU_HASH             0x0000000000000308
  STRTAB               0x00000000000004d8
  SYMTAB               0x0000000000000340
  STRSZ                0x00000000000000da
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000003f80
  PLTRELSZ             0x00000000000000c0
  PLTREL               0x0000000000000007
  JMPREL               0x0000000000000758
  RELA                 0x0000000000000608
  RELASZ               0x0000000000000150
  RELAENT              0x0000000000000018
  FLAGS                0x0000000000000008
  FLAGS_1              0x0000000008000001
  VERNEED              0x00000000000005d8
  VERNEEDNUM           0x0000000000000001
  VERSYM               0x00000000000005b2
  RELACOUNT            0x0000000000000006

Version References:
  required from libc.so.6:
    0x0d696914 0x00 03 GLIBC_2.4
    0x09691a75 0x00 02 GLIBC_2.2.5

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  00000000000002a8  00000000000002a8  000002a8  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.gnu.build-id 00000024  00000000000002c4  00000000000002c4  000002c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.ABI-tag 00000020  00000000000002e8  00000000000002e8  000002e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     00000034  0000000000000308  0000000000000308  00000308  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       00000198  0000000000000340  0000000000000340  00000340  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       000000da  00000000000004d8  00000000000004d8  000004d8  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  00000022  00000000000005b2  00000000000005b2  000005b2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000030  00000000000005d8  00000000000005d8  000005d8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rela.dyn     00000150  0000000000000608  0000000000000608  00000608  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.plt     000000c0  0000000000000758  0000000000000758  00000758  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         0000001b  0000000000001000  0000000000001000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          00000090  0000000000001020  0000000000001020  00001020  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt.got      00000008  00000000000010b0  00000000000010b0  000010b0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         00000585  00000000000010c0  00000000000010c0  000010c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         0000000d  0000000000001648  0000000000001648  00001648  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       000001c7  0000000000002000  0000000000002000  00002000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 0000009c  00000000000021c8  00000000000021c8  000021c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     00000270  0000000000002268  0000000000002268  00002268  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .init_array   00000008  0000000000003d80  0000000000003d80  00002d80  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 19 .fini_array   00000008  0000000000003d88  0000000000003d88  00002d88  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .dynamic      000001f0  0000000000003d90  0000000000003d90  00002d90  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got          00000080  0000000000003f80  0000000000003f80  00002f80  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .data         000000a0  0000000000004000  0000000000004000  00003000  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 23 .bss          00000028  00000000000040a0  00000000000040a0  000030a0  2**4
                  ALLOC
 24 .comment      00000054  0000000000000000  0000000000000000  000030a0  2**0
                  CONTENTS, READONLY
 25 .debug_aranges 00000060  0000000000000000  0000000000000000  000030f4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_info   00000a58  0000000000000000  0000000000000000  00003154  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_abbrev 00000306  0000000000000000  0000000000000000  00003bac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_line   0000036a  0000000000000000  0000000000000000  00003eb2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_str    000003e5  0000000000000000  0000000000000000  0000421c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000000002a8 l    d  .interp	0000000000000000              .interp
00000000000002c4 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
00000000000002e8 l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
0000000000000308 l    d  .gnu.hash	0000000000000000              .gnu.hash
0000000000000340 l    d  .dynsym	0000000000000000              .dynsym
00000000000004d8 l    d  .dynstr	0000000000000000              .dynstr
00000000000005b2 l    d  .gnu.version	0000000000000000              .gnu.version
00000000000005d8 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
0000000000000608 l    d  .rela.dyn	0000000000000000              .rela.dyn
0000000000000758 l    d  .rela.plt	0000000000000000              .rela.plt
0000000000001000 l    d  .init	0000000000000000              .init
0000000000001020 l    d  .plt	0000000000000000              .plt
00000000000010b0 l    d  .plt.got	0000000000000000              .plt.got
00000000000010c0 l    d  .text	0000000000000000              .text
0000000000001648 l    d  .fini	0000000000000000              .fini
0000000000002000 l    d  .rodata	0000000000000000              .rodata
00000000000021c8 l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
0000000000002268 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000003d80 l    d  .init_array	0000000000000000              .init_array
0000000000003d88 l    d  .fini_array	0000000000000000              .fini_array
0000000000003d90 l    d  .dynamic	0000000000000000              .dynamic
0000000000003f80 l    d  .got	0000000000000000              .got
0000000000004000 l    d  .data	0000000000000000              .data
00000000000040a0 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    d  .debug_aranges	0000000000000000              .debug_aranges
0000000000000000 l    d  .debug_info	0000000000000000              .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000              .debug_abbrev
0000000000000000 l    d  .debug_line	0000000000000000              .debug_line
0000000000000000 l    d  .debug_str	0000000000000000              .debug_str
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
00000000000010f0 l     F .text	0000000000000000              deregister_tm_clones
0000000000001120 l     F .text	0000000000000000              register_tm_clones
0000000000001160 l     F .text	0000000000000000              __do_global_dtors_aux
00000000000040bc l     O .bss	0000000000000001              completed.8061
0000000000003d88 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
00000000000011a0 l     F .text	0000000000000000              frame_dummy
0000000000003d80 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              main.c
00000000000011d4 l     F .text	0000000000000017              wordcount_less
00000000000011eb l     F .text	000000000000001b              display_help
0000000000004020 l     O .data	0000000000000080              long_options.3215
0000000000000000 l    df *ABS*	0000000000000000              word_count.c
0000000000000000 l    df *ABS*	0000000000000000              wc_sort.c
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
00000000000024d4 l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000003d88 l       .init_array	0000000000000000              __init_array_end
0000000000003d90 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000003d80 l       .init_array	0000000000000000              __init_array_start
00000000000021c8 l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000003f80 l     O .got	0000000000000000              _GLOBAL_OFFSET_TABLE_
0000000000001000 l     F .init	0000000000000000              _init
0000000000001640 g     F .text	0000000000000005              __libc_csu_fini
00000000000011c1 g     F .text	0000000000000013              count_words
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
00000000000040a0 g     O .bss	0000000000000008              stdout@@GLIBC_2.2.5
0000000000004000  w      .data	0000000000000000              data_start
0000000000000000       F *UND*	0000000000000000              strcpy@@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              puts@@GLIBC_2.2.5
00000000000040b0 g     O .bss	0000000000000008              stdin@@GLIBC_2.2.5
00000000000040a0 g       .data	0000000000000000              _edata
00000000000040c0 g     O .bss	0000000000000008              word_counts
00000000000040b8 g     O .bss	0000000000000004              optind@@GLIBC_2.2.5
0000000000001537 g     F .text	0000000000000098              wordcount_sort
0000000000001648 g     F .fini	0000000000000000              .hidden _fini
0000000000000000       F *UND*	0000000000000000              strlen@@GLIBC_2.2.5
0000000000001484 g     F .text	00000000000000b3              wordcount_insert_ordered
0000000000000000       F *UND*	0000000000000000              __stack_chk_fail@@GLIBC_2.4
0000000000000000       F *UND*	0000000000000000              getopt_long@@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              printf@@GLIBC_2.2.5
00000000000011a9 g     F .text	0000000000000018              num_words
0000000000001388 g     F .text	000000000000003c              new_string
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000004000 g       .data	0000000000000000              __data_start
0000000000000000       F *UND*	0000000000000000              fprintf@@GLIBC_2.2.5
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000004008 g     O .data	0000000000000000              .hidden __dso_handle
0000000000002000 g     O .rodata	0000000000000004              _IO_stdin_used
00000000000013c4 g     F .text	000000000000001a              init_words
00000000000015d0 g     F .text	0000000000000065              __libc_csu_init
0000000000000000       F *UND*	0000000000000000              malloc@@GLIBC_2.2.5
0000000000001416 g     F .text	0000000000000013              add_word
00000000000040c8 g       .bss	0000000000000000              _end
00000000000010c0 g     F .text	000000000000002f              _start
00000000000040a0 g       .bss	0000000000000000              __bss_start
0000000000001206 g     F .text	0000000000000182              main
00000000000013f8 g     F .text	000000000000001e              find_word
00000000000013de g     F .text	000000000000001a              len_words
0000000000001429 g     F .text	000000000000005b              fprint_words
00000000000040a0 g     O .data	0000000000000000              .hidden __TMC_END__
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
0000000000000000  w    F *UND*	0000000000000000              __cxa_finalize@@GLIBC_2.2.5



Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 62 2f 00 00    	pushq  0x2f62(%rip)        # 3f88 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 64 2f 00 00    	jmpq   *0x2f64(%rip)        # 3f90 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <strcpy@plt>:
    1030:	ff 25 62 2f 00 00    	jmpq   *0x2f62(%rip)        # 3f98 <strcpy@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	pushq  $0x0
    103b:	e9 e0 ff ff ff       	jmpq   1020 <.plt>

0000000000001040 <puts@plt>:
    1040:	ff 25 5a 2f 00 00    	jmpq   *0x2f5a(%rip)        # 3fa0 <puts@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	pushq  $0x1
    104b:	e9 d0 ff ff ff       	jmpq   1020 <.plt>

0000000000001050 <strlen@plt>:
    1050:	ff 25 52 2f 00 00    	jmpq   *0x2f52(%rip)        # 3fa8 <strlen@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	pushq  $0x2
    105b:	e9 c0 ff ff ff       	jmpq   1020 <.plt>

0000000000001060 <__stack_chk_fail@plt>:
    1060:	ff 25 4a 2f 00 00    	jmpq   *0x2f4a(%rip)        # 3fb0 <__stack_chk_fail@GLIBC_2.4>
    1066:	68 03 00 00 00       	pushq  $0x3
    106b:	e9 b0 ff ff ff       	jmpq   1020 <.plt>

0000000000001070 <getopt_long@plt>:
    1070:	ff 25 42 2f 00 00    	jmpq   *0x2f42(%rip)        # 3fb8 <getopt_long@GLIBC_2.2.5>
    1076:	68 04 00 00 00       	pushq  $0x4
    107b:	e9 a0 ff ff ff       	jmpq   1020 <.plt>

0000000000001080 <printf@plt>:
    1080:	ff 25 3a 2f 00 00    	jmpq   *0x2f3a(%rip)        # 3fc0 <printf@GLIBC_2.2.5>
    1086:	68 05 00 00 00       	pushq  $0x5
    108b:	e9 90 ff ff ff       	jmpq   1020 <.plt>

0000000000001090 <fprintf@plt>:
    1090:	ff 25 32 2f 00 00    	jmpq   *0x2f32(%rip)        # 3fc8 <fprintf@GLIBC_2.2.5>
    1096:	68 06 00 00 00       	pushq  $0x6
    109b:	e9 80 ff ff ff       	jmpq   1020 <.plt>

00000000000010a0 <malloc@plt>:
    10a0:	ff 25 2a 2f 00 00    	jmpq   *0x2f2a(%rip)        # 3fd0 <malloc@GLIBC_2.2.5>
    10a6:	68 07 00 00 00       	pushq  $0x7
    10ab:	e9 70 ff ff ff       	jmpq   1020 <.plt>

Disassembly of section .plt.got:

00000000000010b0 <__cxa_finalize@plt>:
    10b0:	ff 25 42 2f 00 00    	jmpq   *0x2f42(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10b6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000010c0 <_start>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	31 ed                	xor    %ebp,%ebp
    10c6:	49 89 d1             	mov    %rdx,%r9
    10c9:	5e                   	pop    %rsi
    10ca:	48 89 e2             	mov    %rsp,%rdx
    10cd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10d1:	50                   	push   %rax
    10d2:	54                   	push   %rsp
    10d3:	4c 8d 05 66 05 00 00 	lea    0x566(%rip),%r8        # 1640 <__libc_csu_fini>
    10da:	48 8d 0d ef 04 00 00 	lea    0x4ef(%rip),%rcx        # 15d0 <__libc_csu_init>
    10e1:	48 8d 3d 1e 01 00 00 	lea    0x11e(%rip),%rdi        # 1206 <main>
    10e8:	ff 15 f2 2e 00 00    	callq  *0x2ef2(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10ee:	f4                   	hlt    
    10ef:	90                   	nop

00000000000010f0 <deregister_tm_clones>:
    10f0:	48 8d 3d a9 2f 00 00 	lea    0x2fa9(%rip),%rdi        # 40a0 <stdout@@GLIBC_2.2.5>
    10f7:	48 8d 05 a2 2f 00 00 	lea    0x2fa2(%rip),%rax        # 40a0 <stdout@@GLIBC_2.2.5>
    10fe:	48 39 f8             	cmp    %rdi,%rax
    1101:	74 15                	je     1118 <deregister_tm_clones+0x28>
    1103:	48 8b 05 ce 2e 00 00 	mov    0x2ece(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    110a:	48 85 c0             	test   %rax,%rax
    110d:	74 09                	je     1118 <deregister_tm_clones+0x28>
    110f:	ff e0                	jmpq   *%rax
    1111:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1118:	c3                   	retq   
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <register_tm_clones>:
    1120:	48 8d 3d 79 2f 00 00 	lea    0x2f79(%rip),%rdi        # 40a0 <stdout@@GLIBC_2.2.5>
    1127:	48 8d 35 72 2f 00 00 	lea    0x2f72(%rip),%rsi        # 40a0 <stdout@@GLIBC_2.2.5>
    112e:	48 29 fe             	sub    %rdi,%rsi
    1131:	48 89 f0             	mov    %rsi,%rax
    1134:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1138:	48 c1 f8 03          	sar    $0x3,%rax
    113c:	48 01 c6             	add    %rax,%rsi
    113f:	48 d1 fe             	sar    %rsi
    1142:	74 14                	je     1158 <register_tm_clones+0x38>
    1144:	48 8b 05 a5 2e 00 00 	mov    0x2ea5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    114b:	48 85 c0             	test   %rax,%rax
    114e:	74 08                	je     1158 <register_tm_clones+0x38>
    1150:	ff e0                	jmpq   *%rax
    1152:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1158:	c3                   	retq   
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <__do_global_dtors_aux>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	80 3d 51 2f 00 00 00 	cmpb   $0x0,0x2f51(%rip)        # 40bc <completed.8061>
    116b:	75 2b                	jne    1198 <__do_global_dtors_aux+0x38>
    116d:	55                   	push   %rbp
    116e:	48 83 3d 82 2e 00 00 	cmpq   $0x0,0x2e82(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1175:	00 
    1176:	48 89 e5             	mov    %rsp,%rbp
    1179:	74 0c                	je     1187 <__do_global_dtors_aux+0x27>
    117b:	48 8b 3d 86 2e 00 00 	mov    0x2e86(%rip),%rdi        # 4008 <__dso_handle>
    1182:	e8 29 ff ff ff       	callq  10b0 <__cxa_finalize@plt>
    1187:	e8 64 ff ff ff       	callq  10f0 <deregister_tm_clones>
    118c:	c6 05 29 2f 00 00 01 	movb   $0x1,0x2f29(%rip)        # 40bc <completed.8061>
    1193:	5d                   	pop    %rbp
    1194:	c3                   	retq   
    1195:	0f 1f 00             	nopl   (%rax)
    1198:	c3                   	retq   
    1199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011a0 <frame_dummy>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	e9 77 ff ff ff       	jmpq   1120 <register_tm_clones>

00000000000011a9 <num_words>:
    11a9:	f3 0f 1e fa          	endbr64 
    11ad:	55                   	push   %rbp
    11ae:	48 89 e5             	mov    %rsp,%rbp
    11b1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    11b5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    11bc:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11bf:	5d                   	pop    %rbp
    11c0:	c3                   	retq   

00000000000011c1 <count_words>:
    11c1:	f3 0f 1e fa          	endbr64 
    11c5:	55                   	push   %rbp
    11c6:	48 89 e5             	mov    %rsp,%rbp
    11c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    11cd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    11d1:	90                   	nop
    11d2:	5d                   	pop    %rbp
    11d3:	c3                   	retq   

00000000000011d4 <wordcount_less>:
    11d4:	f3 0f 1e fa          	endbr64 
    11d8:	55                   	push   %rbp
    11d9:	48 89 e5             	mov    %rsp,%rbp
    11dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    11e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    11e4:	b8 00 00 00 00       	mov    $0x0,%eax
    11e9:	5d                   	pop    %rbp
    11ea:	c3                   	retq   

00000000000011eb <display_help>:
    11eb:	f3 0f 1e fa          	endbr64 
    11ef:	55                   	push   %rbp
    11f0:	48 89 e5             	mov    %rsp,%rbp
    11f3:	48 8d 3d 0e 0e 00 00 	lea    0xe0e(%rip),%rdi        # 2008 <_IO_stdin_used+0x8>
    11fa:	e8 41 fe ff ff       	callq  1040 <puts@plt>
    11ff:	b8 00 00 00 00       	mov    $0x0,%eax
    1204:	5d                   	pop    %rbp
    1205:	c3                   	retq   

0000000000001206 <main>:
    1206:	f3 0f 1e fa          	endbr64 
    120a:	55                   	push   %rbp
    120b:	48 89 e5             	mov    %rsp,%rbp
    120e:	48 83 ec 30          	sub    $0x30,%rsp
    1212:	89 7d dc             	mov    %edi,-0x24(%rbp)
    1215:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    1219:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    1220:	eb 31                	jmp    1253 <main+0x4d>
    1222:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1225:	48 98                	cltq   
    1227:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    122e:	00 
    122f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1233:	48 01 d0             	add    %rdx,%rax
    1236:	48 8b 10             	mov    (%rax),%rdx
    1239:	8b 45 ec             	mov    -0x14(%rbp),%eax
    123c:	89 c6                	mov    %eax,%esi
    123e:	48 8d 3d ea 0e 00 00 	lea    0xeea(%rip),%rdi        # 212f <_IO_stdin_used+0x12f>
    1245:	b8 00 00 00 00       	mov    $0x0,%eax
    124a:	e8 31 fe ff ff       	callq  1080 <printf@plt>
    124f:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    1253:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1256:	3b 45 dc             	cmp    -0x24(%rbp),%eax
    1259:	7c c7                	jl     1222 <main+0x1c>
    125b:	c6 45 ea 01          	movb   $0x1,-0x16(%rbp)
    125f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    1266:	c6 45 eb 00          	movb   $0x0,-0x15(%rbp)
    126a:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    1271:	00 
    1272:	eb 38                	jmp    12ac <main+0xa6>
    1274:	83 7d f4 68          	cmpl   $0x68,-0xc(%rbp)
    1278:	74 28                	je     12a2 <main+0x9c>
    127a:	83 7d f4 68          	cmpl   $0x68,-0xc(%rbp)
    127e:	7f 2c                	jg     12ac <main+0xa6>
    1280:	83 7d f4 63          	cmpl   $0x63,-0xc(%rbp)
    1284:	74 08                	je     128e <main+0x88>
    1286:	83 7d f4 66          	cmpl   $0x66,-0xc(%rbp)
    128a:	74 0c                	je     1298 <main+0x92>
    128c:	eb 1e                	jmp    12ac <main+0xa6>
    128e:	c6 45 ea 01          	movb   $0x1,-0x16(%rbp)
    1292:	c6 45 eb 00          	movb   $0x0,-0x15(%rbp)
    1296:	eb 14                	jmp    12ac <main+0xa6>
    1298:	c6 45 ea 00          	movb   $0x0,-0x16(%rbp)
    129c:	c6 45 eb 01          	movb   $0x1,-0x15(%rbp)
    12a0:	eb 0a                	jmp    12ac <main+0xa6>
    12a2:	e8 44 ff ff ff       	callq  11eb <display_help>
    12a7:	e9 da 00 00 00       	jmpq   1386 <main+0x180>
    12ac:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    12b0:	8b 45 dc             	mov    -0x24(%rbp),%eax
    12b3:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    12b9:	48 8d 0d 60 2d 00 00 	lea    0x2d60(%rip),%rcx        # 4020 <long_options.3215>
    12c0:	48 8d 15 77 0e 00 00 	lea    0xe77(%rip),%rdx        # 213e <_IO_stdin_used+0x13e>
    12c7:	89 c7                	mov    %eax,%edi
    12c9:	e8 a2 fd ff ff       	callq  1070 <getopt_long@plt>
    12ce:	89 45 f4             	mov    %eax,-0xc(%rbp)
    12d1:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%rbp)
    12d5:	75 9d                	jne    1274 <main+0x6e>
    12d7:	0f b6 45 ea          	movzbl -0x16(%rbp),%eax
    12db:	83 f0 01             	xor    $0x1,%eax
    12de:	84 c0                	test   %al,%al
    12e0:	74 21                	je     1303 <main+0xfd>
    12e2:	0f b6 45 eb          	movzbl -0x15(%rbp),%eax
    12e6:	83 f0 01             	xor    $0x1,%eax
    12e9:	84 c0                	test   %al,%al
    12eb:	74 16                	je     1303 <main+0xfd>
    12ed:	48 8d 3d 4e 0e 00 00 	lea    0xe4e(%rip),%rdi        # 2142 <_IO_stdin_used+0x142>
    12f4:	e8 47 fd ff ff       	callq  1040 <puts@plt>
    12f9:	e8 ed fe ff ff       	callq  11eb <display_help>
    12fe:	e9 83 00 00 00       	jmpq   1386 <main+0x180>
    1303:	48 8d 3d b6 2d 00 00 	lea    0x2db6(%rip),%rdi        # 40c0 <word_counts>
    130a:	e8 b5 00 00 00       	callq  13c4 <init_words>
    130f:	8b 05 a3 2d 00 00    	mov    0x2da3(%rip),%eax        # 40b8 <optind@@GLIBC_2.2.5>
    1315:	8b 55 dc             	mov    -0x24(%rbp),%edx
    1318:	29 c2                	sub    %eax,%edx
    131a:	89 d0                	mov    %edx,%eax
    131c:	85 c0                	test   %eax,%eax
    131e:	7f 0b                	jg     132b <main+0x125>
    1320:	48 8b 05 89 2d 00 00 	mov    0x2d89(%rip),%rax        # 40b0 <stdin@@GLIBC_2.2.5>
    1327:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    132b:	80 7d ea 00          	cmpb   $0x0,-0x16(%rbp)
    132f:	74 18                	je     1349 <main+0x143>
    1331:	8b 45 f0             	mov    -0x10(%rbp),%eax
    1334:	89 c6                	mov    %eax,%esi
    1336:	48 8d 3d 23 0e 00 00 	lea    0xe23(%rip),%rdi        # 2160 <_IO_stdin_used+0x160>
    133d:	b8 00 00 00 00       	mov    $0x0,%eax
    1342:	e8 39 fd ff ff       	callq  1080 <printf@plt>
    1347:	eb 38                	jmp    1381 <main+0x17b>
    1349:	48 8d 35 84 fe ff ff 	lea    -0x17c(%rip),%rsi        # 11d4 <wordcount_less>
    1350:	48 8d 3d 69 2d 00 00 	lea    0x2d69(%rip),%rdi        # 40c0 <word_counts>
    1357:	e8 db 01 00 00       	callq  1537 <wordcount_sort>
    135c:	48 8d 3d 25 0e 00 00 	lea    0xe25(%rip),%rdi        # 2188 <_IO_stdin_used+0x188>
    1363:	e8 d8 fc ff ff       	callq  1040 <puts@plt>
    1368:	48 8b 15 31 2d 00 00 	mov    0x2d31(%rip),%rdx        # 40a0 <stdout@@GLIBC_2.2.5>
    136f:	48 8b 05 4a 2d 00 00 	mov    0x2d4a(%rip),%rax        # 40c0 <word_counts>
    1376:	48 89 d6             	mov    %rdx,%rsi
    1379:	48 89 c7             	mov    %rax,%rdi
    137c:	e8 a8 00 00 00       	callq  1429 <fprint_words>
    1381:	b8 00 00 00 00       	mov    $0x0,%eax
    1386:	c9                   	leaveq 
    1387:	c3                   	retq   

0000000000001388 <new_string>:
    1388:	f3 0f 1e fa          	endbr64 
    138c:	55                   	push   %rbp
    138d:	48 89 e5             	mov    %rsp,%rbp
    1390:	48 83 ec 10          	sub    $0x10,%rsp
    1394:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1398:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    139c:	48 89 c7             	mov    %rax,%rdi
    139f:	e8 ac fc ff ff       	callq  1050 <strlen@plt>
    13a4:	48 83 c0 01          	add    $0x1,%rax
    13a8:	48 89 c7             	mov    %rax,%rdi
    13ab:	e8 f0 fc ff ff       	callq  10a0 <malloc@plt>
    13b0:	48 89 c2             	mov    %rax,%rdx
    13b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    13b7:	48 89 c6             	mov    %rax,%rsi
    13ba:	48 89 d7             	mov    %rdx,%rdi
    13bd:	e8 6e fc ff ff       	callq  1030 <strcpy@plt>
    13c2:	c9                   	leaveq 
    13c3:	c3                   	retq   

00000000000013c4 <init_words>:
    13c4:	f3 0f 1e fa          	endbr64 
    13c8:	55                   	push   %rbp
    13c9:	48 89 e5             	mov    %rsp,%rbp
    13cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    13d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    13d4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    13db:	90                   	nop
    13dc:	5d                   	pop    %rbp
    13dd:	c3                   	retq   

00000000000013de <len_words>:
    13de:	f3 0f 1e fa          	endbr64 
    13e2:	55                   	push   %rbp
    13e3:	48 89 e5             	mov    %rsp,%rbp
    13e6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    13ea:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    13f1:	00 
    13f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    13f6:	5d                   	pop    %rbp
    13f7:	c3                   	retq   

00000000000013f8 <find_word>:
    13f8:	f3 0f 1e fa          	endbr64 
    13fc:	55                   	push   %rbp
    13fd:	48 89 e5             	mov    %rsp,%rbp
    1400:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1404:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    1408:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    140f:	00 
    1410:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1414:	5d                   	pop    %rbp
    1415:	c3                   	retq   

0000000000001416 <add_word>:
    1416:	f3 0f 1e fa          	endbr64 
    141a:	55                   	push   %rbp
    141b:	48 89 e5             	mov    %rsp,%rbp
    141e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1422:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1426:	90                   	nop
    1427:	5d                   	pop    %rbp
    1428:	c3                   	retq   

0000000000001429 <fprint_words>:
    1429:	f3 0f 1e fa          	endbr64 
    142d:	55                   	push   %rbp
    142e:	48 89 e5             	mov    %rsp,%rbp
    1431:	48 83 ec 20          	sub    $0x20,%rsp
    1435:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1439:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    143d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1441:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1445:	eb 32                	jmp    1479 <fprint_words+0x50>
    1447:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    144b:	48 8b 08             	mov    (%rax),%rcx
    144e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1452:	8b 50 08             	mov    0x8(%rax),%edx
    1455:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1459:	48 8d 35 60 0d 00 00 	lea    0xd60(%rip),%rsi        # 21c0 <_IO_stdin_used+0x1c0>
    1460:	48 89 c7             	mov    %rax,%rdi
    1463:	b8 00 00 00 00       	mov    $0x0,%eax
    1468:	e8 23 fc ff ff       	callq  1090 <fprintf@plt>
    146d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1471:	48 8b 40 10          	mov    0x10(%rax),%rax
    1475:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1479:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    147e:	75 c7                	jne    1447 <fprint_words+0x1e>
    1480:	90                   	nop
    1481:	90                   	nop
    1482:	c9                   	leaveq 
    1483:	c3                   	retq   

0000000000001484 <wordcount_insert_ordered>:
    1484:	55                   	push   %rbp
    1485:	48 89 e5             	mov    %rsp,%rbp
    1488:	48 83 ec 30          	sub    $0x30,%rsp
    148c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1490:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    1494:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    1498:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    149c:	48 8b 00             	mov    (%rax),%rax
    149f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    14a3:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    14a8:	74 18                	je     14c2 <wordcount_insert_ordered+0x3e>
    14aa:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    14ae:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    14b2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    14b6:	48 89 ce             	mov    %rcx,%rsi
    14b9:	48 89 d7             	mov    %rdx,%rdi
    14bc:	ff d0                	callq  *%rax
    14be:	84 c0                	test   %al,%al
    14c0:	74 19                	je     14db <wordcount_insert_ordered+0x57>
    14c2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    14c6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    14ca:	48 89 50 10          	mov    %rdx,0x10(%rax)
    14ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    14d2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    14d6:	48 89 10             	mov    %rdx,(%rax)
    14d9:	eb 59                	jmp    1534 <wordcount_insert_ordered+0xb0>
    14db:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    14df:	48 8b 40 10          	mov    0x10(%rax),%rax
    14e3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    14e7:	eb 14                	jmp    14fd <wordcount_insert_ordered+0x79>
    14e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    14ed:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    14f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    14f5:	48 8b 40 10          	mov    0x10(%rax),%rax
    14f9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    14fd:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    1502:	74 18                	je     151c <wordcount_insert_ordered+0x98>
    1504:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    1508:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    150c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1510:	48 89 ce             	mov    %rcx,%rsi
    1513:	48 89 d7             	mov    %rdx,%rdi
    1516:	ff d0                	callq  *%rax
    1518:	84 c0                	test   %al,%al
    151a:	75 cd                	jne    14e9 <wordcount_insert_ordered+0x65>
    151c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1520:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    1524:	48 89 50 10          	mov    %rdx,0x10(%rax)
    1528:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    152c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1530:	48 89 50 10          	mov    %rdx,0x10(%rax)
    1534:	90                   	nop
    1535:	c9                   	leaveq 
    1536:	c3                   	retq   

0000000000001537 <wordcount_sort>:
    1537:	55                   	push   %rbp
    1538:	48 89 e5             	mov    %rsp,%rbp
    153b:	48 83 ec 30          	sub    $0x30,%rsp
    153f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    1543:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    1547:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    154e:	00 00 
    1550:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1554:	31 c0                	xor    %eax,%eax
    1556:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    155a:	48 8b 00             	mov    (%rax),%rax
    155d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1561:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    1565:	48 89 c7             	mov    %rax,%rdi
    1568:	e8 57 fe ff ff       	callq  13c4 <init_words>
    156d:	eb 37                	jmp    15a6 <wordcount_sort+0x6f>
    156f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1573:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1577:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    157b:	48 8b 40 10          	mov    0x10(%rax),%rax
    157f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1583:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1587:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    158e:	00 
    158f:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    1593:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    1597:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    159b:	48 89 ce             	mov    %rcx,%rsi
    159e:	48 89 c7             	mov    %rax,%rdi
    15a1:	e8 de fe ff ff       	callq  1484 <wordcount_insert_ordered>
    15a6:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    15ab:	75 c2                	jne    156f <wordcount_sort+0x38>
    15ad:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    15b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    15b5:	48 89 10             	mov    %rdx,(%rax)
    15b8:	90                   	nop
    15b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    15bd:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    15c4:	00 00 
    15c6:	74 05                	je     15cd <wordcount_sort+0x96>
    15c8:	e8 93 fa ff ff       	callq  1060 <__stack_chk_fail@plt>
    15cd:	c9                   	leaveq 
    15ce:	c3                   	retq   
    15cf:	90                   	nop

00000000000015d0 <__libc_csu_init>:
    15d0:	f3 0f 1e fa          	endbr64 
    15d4:	41 57                	push   %r15
    15d6:	4c 8d 3d a3 27 00 00 	lea    0x27a3(%rip),%r15        # 3d80 <__frame_dummy_init_array_entry>
    15dd:	41 56                	push   %r14
    15df:	49 89 d6             	mov    %rdx,%r14
    15e2:	41 55                	push   %r13
    15e4:	49 89 f5             	mov    %rsi,%r13
    15e7:	41 54                	push   %r12
    15e9:	41 89 fc             	mov    %edi,%r12d
    15ec:	55                   	push   %rbp
    15ed:	48 8d 2d 94 27 00 00 	lea    0x2794(%rip),%rbp        # 3d88 <__do_global_dtors_aux_fini_array_entry>
    15f4:	53                   	push   %rbx
    15f5:	4c 29 fd             	sub    %r15,%rbp
    15f8:	48 83 ec 08          	sub    $0x8,%rsp
    15fc:	e8 ff f9 ff ff       	callq  1000 <_init>
    1601:	48 c1 fd 03          	sar    $0x3,%rbp
    1605:	74 1f                	je     1626 <__libc_csu_init+0x56>
    1607:	31 db                	xor    %ebx,%ebx
    1609:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1610:	4c 89 f2             	mov    %r14,%rdx
    1613:	4c 89 ee             	mov    %r13,%rsi
    1616:	44 89 e7             	mov    %r12d,%edi
    1619:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    161d:	48 83 c3 01          	add    $0x1,%rbx
    1621:	48 39 dd             	cmp    %rbx,%rbp
    1624:	75 ea                	jne    1610 <__libc_csu_init+0x40>
    1626:	48 83 c4 08          	add    $0x8,%rsp
    162a:	5b                   	pop    %rbx
    162b:	5d                   	pop    %rbp
    162c:	41 5c                	pop    %r12
    162e:	41 5d                	pop    %r13
    1630:	41 5e                	pop    %r14
    1632:	41 5f                	pop    %r15
    1634:	c3                   	retq   
    1635:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    163c:	00 00 00 00 

0000000000001640 <__libc_csu_fini>:
    1640:	f3 0f 1e fa          	endbr64 
    1644:	c3                   	retq   

Disassembly of section .fini:

0000000000001648 <_fini>:
    1648:	f3 0f 1e fa          	endbr64 
    164c:	48 83 ec 08          	sub    $0x8,%rsp
    1650:	48 83 c4 08          	add    $0x8,%rsp
    1654:	c3                   	retq   
